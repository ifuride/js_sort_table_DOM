{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","rows","addEventListener","handler","header","target","closest","innerText","sort","a","b","children","localeCompare","slice","replace","forEach","item","append"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAAWD,EAAAA,EAAUC,MAE3BJ,EAAUK,iBAAiB,QAAS,SAACC,GAG3BC,OAFOD,EAAQE,OAAOC,QAAQ,MAAMC,WAGrC,IAAA,OACHN,EAAKO,KAAK,SAACC,EAAGC,GACXD,OAAAA,EAAEE,SAAS,GAAGJ,UAAWK,cAAcF,EAAEC,SAAS,GAAGJ,aACxD,MAEG,IAAA,WACHN,EAAKO,KAAK,SAACC,EAAGC,GACXD,OAAAA,EAAEE,SAAS,GAAGJ,UAAWK,cAAcF,EAAEC,SAAS,GAAGJ,aACxD,MAEG,IAAA,MACHN,EAAKO,KAAK,SAACC,EAAGC,GACXD,OAAAA,EAAEE,SAAS,GAAGJ,UAAcG,EAAEC,SAAS,GAAGJ,YAC7C,MAEG,IAAA,SACHN,EAAKO,KAAK,SAACC,EAAGC,GACV,OAACD,EAAEE,SAAS,GAAGJ,UAAUM,MAAM,GAAGC,QAAQ,KAAM,KAC5CJ,EAAEC,SAAS,GAAGJ,UAAUM,MAAM,GAAGC,QAAQ,KAAM,MAI3Db,EAAKc,QAAQ,SAAAC,GAAQhB,OAAAA,EAAUiB,OAAOD","file":"main.df2dce40.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst rows = [...tableBody.rows];\n\ntableHead.addEventListener('click', (handler) => {\n  const header = handler.target.closest('th').innerText;\n\n  switch (header) {\n    case 'Name':\n      rows.sort((a, b) =>\n        (a.children[0].innerText).localeCompare(b.children[0].innerText));\n      break;\n\n    case 'Position':\n      rows.sort((a, b) =>\n        (a.children[1].innerText).localeCompare(b.children[1].innerText));\n      break;\n\n    case 'Age':\n      rows.sort((a, b) =>\n        (a.children[2].innerText) - (b.children[2].innerText));\n      break;\n\n    case 'Salary':\n      rows.sort((a, b) =>\n        ((+a.children[3].innerText.slice(1).replace(/,/g, ''))\n          - (+b.children[3].innerText.slice(1).replace(/,/g, ''))));\n      break;\n  }\n\n  rows.forEach(item => tableBody.append(item));\n});\n"]}